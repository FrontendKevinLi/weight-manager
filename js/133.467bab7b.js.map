{"version":3,"file":"js/133.467bab7b.js","mappings":"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","sources":["webpack://weight-manager/./src/firebase/firestore.ts","webpack://weight-manager/./src/views/DashboardView.vue?0681","webpack://weight-manager/./src/components/LabeledIconButton.vue?18f4","webpack://weight-manager/./src/components/LabeledIconButton.vue","webpack://weight-manager/./src/components/LastDaysWeightBarChart.vue?0b0c","webpack://weight-manager/./src/components/LastDaysWeightBarChart.vue","webpack://weight-manager/./src/views/DashboardView.vue?a221","webpack://weight-manager/./src/views/DashboardView.vue"],"sourcesContent":["import { until } from '@open-draft/until'\nimport {\n  getFirestore, doc, setDoc, getDoc,\n} from 'firebase/firestore'\nimport { DateTime } from 'luxon'\nimport { DailyRecord, MonthlyRecord } from '@/types/records'\nimport { getIsAuthenticated, auth } from './auth'\n\nconst db = getFirestore()\n\nconst getMonthlyRecord = async (dateTime: DateTime): Promise<MonthlyRecord> => {\n  const isAuthenticatedResult = await until(() => getIsAuthenticated())\n  if (isAuthenticatedResult.error) throw isAuthenticatedResult.error\n  if (auth.currentUser == null) throw new Error('User not logged in or not exist')\n\n  const year = dateTime.year.toString()\n  const month = dateTime.month.toString()\n\n  const docRef = doc(db, 'users', auth.currentUser.uid, year, month)\n  const docSnap = await getDoc(docRef)\n\n  if (!docSnap.exists()) return {}\n\n  return docSnap.data()\n}\n\nconst updateDailyRecord = async (dateTime: DateTime, dailyRecord: DailyRecord) => {\n  const isAuthenticatedResult = await until(() => getIsAuthenticated())\n  if (isAuthenticatedResult.error) throw isAuthenticatedResult.error\n  if (auth.currentUser == null) throw new Error('User not logged in or not exist')\n\n  const year = dateTime.year.toString()\n  const month = dateTime.month.toString()\n  const day = dateTime.day.toString()\n\n  const docRef = doc(db, 'users', auth.currentUser.uid, year, month)\n  const result = await until(() => setDoc(docRef, { [day]: dailyRecord }, { merge: true }))\n  if (result.error) throw result.error\n}\n\nexport {\n  getMonthlyRecord,\n  updateDailyRecord,\n}\n","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-36ca72a7\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"dashboard-view\" }\nconst _hoisted_2 = { class: \"weighing-item-wrapper\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_WeighingItem = _resolveComponent(\"WeighingItem\")!\n  const _component_LastDaysWeightBarChart = _resolveComponent(\"LastDaysWeightBarChart\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.showWeighingItem)\n        ? (_openBlock(), _createBlock(_component_WeighingItem, { key: 0 }))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createVNode(_component_LastDaysWeightBarChart, {\n      onInited: _ctx.handleBarChartInited,\n      onNotEnoughData: _ctx.handleBarChartNotEnoughData\n    }, null, 8, [\"onInited\", \"onNotEnoughData\"])\n  ]))\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6172d952\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"labeled-icon-button\" }\nconst _hoisted_2 = { class: \"label\" }\n\n\nimport InlineSvg from 'vue-inline-svg'\n\ntype LabeledIconButtonProps = {\n  label: string\n  svgSrc: string\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LabeledIconButton',\n  props: {\n    label: null,\n    svgSrc: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n  label: string\n  svgSrc: string\n}\n\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"span\", _hoisted_2, _toDisplayString(props.label), 1),\n    _createVNode(_unref(InlineSvg), {\n      src: props.svgSrc\n    }, null, 8, [\"src\"])\n  ]))\n}\n}\n\n})","import script from \"./LabeledIconButton.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./LabeledIconButton.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./LabeledIconButton.vue?vue&type=style&index=0&id=6172d952&lang=scss&scoped=true\"\n\nimport exportComponent from \"G:\\\\TestProjects\\\\weight-manager\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6172d952\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c3c2aea\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"last-days-weight-bar-chart-wrapper\" }\n\nimport {\n  ref, onMounted, Ref, reactive, computed,\n} from 'vue'\n// import { ECharts, init } from 'echarts'\nimport { init, use, ECharts } from 'echarts/core'\nimport { BarChart } from 'echarts/charts'\nimport {\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n} from 'echarts/components'\nimport {\n  SVGRenderer,\n} from 'echarts/renderers'\nimport { DateTime } from 'luxon'\nimport { getMonthlyRecord } from '@/firebase/firestore'\nimport { until } from '@open-draft/until'\nimport { useToast } from 'vue-toastification'\nimport { MonthlyRecord } from '@/types/records'\nimport gsap from 'gsap'\nimport router from '@/router'\nimport ArrowRightSvg from '@/assets/dashboard/arrow-right-solid.svg'\nimport LabeledIconButton from '@/components/LabeledIconButton.vue'\n\ntype WeightItem = {\n  date: string,\n  weight: number\n}\n\ntype ChartData = {\n  xAxisData: WeightItem['date'][],\n  seriesData: { value: number, itemStyle: { color: string } }[]\n}\n\ntype LastDaysWeightBarChart = {\n  (e: 'inited'): void,\n  (e: 'not-enough-data'): void\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LastDaysWeightBarChart',\n  emits: [\"inited\", \"not-enough-data\"],\n  setup(__props, { emit }: { emit: ({\n  (e: 'inited'): void,\n  (e: 'not-enough-data'): void\n}), expose: any, slots: any, attrs: any }) {\n\nuse([\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  BarChart,\n  SVGRenderer,\n])\n\nconst shouldFetchLastMonthRecord = DateTime.now().day <= 7\nconst hint = 'Complete weekly records to show charts!'\nconst linkText = 'Record now'\n\n\n\nconst weightList = ref<WeightItem[]>([])\nconst hintWrapperRef = ref<HTMLElement>()\nconst barChartRef = ref<HTMLElement>()\n\nconst monthlyRecord = reactive({\n  currentMonthRecord: {} as MonthlyRecord,\n  lastMonthRecord: {} as MonthlyRecord,\n})\n\nconst afterFetchRecord = ref(false)\n\nconst shouldShowChart = computed(() => weightList.value.length >= 8)\n\nconst fetchCurrentMonthRecord = async () => {\n  const currentMonth = DateTime.now()\n  const result = await until(() => getMonthlyRecord(currentMonth))\n  if (result.error) {\n    const toast = useToast()\n    toast.error(result.error.message)\n    return\n  }\n\n  monthlyRecord.currentMonthRecord = result.data\n}\n\nconst fetchLastMonthRecord = async () => {\n  const lastMonth = DateTime.now().minus({ month: 1 })\n  const result = await until(() => getMonthlyRecord(lastMonth))\n  if (result.error) {\n    const toast = useToast()\n    toast.error(result.error.message)\n    return\n  }\n\n  monthlyRecord.lastMonthRecord = result.data\n}\n\nasync function fetchRecords() {\n  await fetchCurrentMonthRecord()\n  if (shouldFetchLastMonthRecord) {\n    await fetchLastMonthRecord()\n  }\n  afterFetchRecord.value = true\n}\n\nfunction getWeight(dateTime: DateTime) {\n  const isCurrentMonth = dateTime.hasSame(DateTime.now(), 'month')\n\n  if (isCurrentMonth) {\n    return monthlyRecord.currentMonthRecord[dateTime.day]?.weight ?? 0\n  }\n\n  return monthlyRecord.lastMonthRecord[dateTime.day]?.weight ?? 0\n}\n\nfunction generateWeightList(): WeightItem[] {\n  const generatedWeightList: WeightItem[] = []\n  for (let i = 7; i > -1; i -= 1) {\n    const newDay = DateTime.now().minus({ day: i })\n    const weight = getWeight(newDay)\n    if (weight === 0) break\n    const generatedWeightItem: WeightItem = {\n      date: newDay.toISODate(),\n      weight,\n    }\n    generatedWeightList.push(generatedWeightItem)\n  }\n\n  return generatedWeightList\n}\n\nfunction getMinAndMaxWeight(weightListParam: WeightItem[]): [number, number] {\n  let min = Number.MAX_SAFE_INTEGER\n  let max = Number.MIN_SAFE_INTEGER\n\n  weightListParam.forEach((weightItem) => {\n    min = Math.min(min, weightItem.weight)\n    max = Math.max(max, weightItem.weight)\n  })\n\n  return [min, max]\n}\n\nfunction getBarColor(weightParam: number, minWeightParam: number, maxWeightParam: number): string {\n  if (weightParam === minWeightParam) return '#9cc7ea'\n  if (weightParam === maxWeightParam) return '#314782'\n  return '#4f85c7'\n}\n\nfunction transformToChartData(weightListParam: WeightItem[], minWeightParam: number, maxWeightParam: number): ChartData {\n  const chartData: ChartData = {\n    seriesData: [],\n    xAxisData: [],\n  }\n\n  weightListParam.forEach((weight) => {\n    chartData.xAxisData.push(weight.date)\n    chartData.seriesData.push({\n      value: weight.weight,\n      itemStyle: {\n        color: getBarColor(weight.weight, minWeightParam, maxWeightParam),\n      },\n    })\n  })\n\n  return chartData\n}\n\nconst registerResizeListener = (chart: ECharts) => {\n  window.addEventListener('resize', () => {\n    chart.resize()\n  })\n}\n\nfunction initChart(barChartRefParam: Ref<HTMLElement | undefined>): ECharts {\n  if (!barChartRefParam.value) {\n    emit('inited')\n    throw new Error('Chart init failed. DOM element does not exits.')\n  }\n\n  const barChart: ECharts = init(barChartRefParam.value)\n\n  registerResizeListener(barChart)\n  emit('inited')\n  return barChart\n}\n\nconst setChartOption = (chart: ECharts, weightList: WeightItem[]): void => {\n  const [minWeight, maxWeight] = getMinAndMaxWeight(weightList)\n\n  const chartData: ChartData = transformToChartData(weightList, minWeight, maxWeight)\n\n  chart.setOption({\n    title: {\n      show: true,\n      text: 'Last Days',\n      left: '0',\n      textStyle: {\n        color: '#2d4e69',\n      },\n    },\n    tooltip: {},\n    xAxis: {\n      type: 'category',\n      data: chartData.xAxisData,\n      axisLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n      },\n    },\n    yAxis: {\n      type: 'value',\n      show: false,\n      scale: true,\n      min: minWeight - 1,\n    },\n    series: [{\n      data: chartData.seriesData,\n      itemStyle: {\n        borderRadius: 10,\n        // shadowColor: '#c3cfe2',\n        // shadowBlur: 4,\n      },\n      type: 'bar',\n    }],\n    grid: {\n      // top: '0',\n      left: '0',\n      right: '0',\n    },\n    animationEasing: 'exponentialInOut',\n  })\n}\n\nconst fadeInHint = () => {\n  if (hintWrapperRef.value == null) return\n\n  const timeline = gsap.timeline()\n  timeline.fromTo(hintWrapperRef.value, {\n    autoAlpha: 0,\n    scale: 0.75,\n  }, {\n    autoAlpha: 1,\n    scale: 1,\n    ease: 'expo.easeInOut',\n    duration: 0.5,\n  })\n}\n\nconst handleLinkButtonClick = () => {\n  router.push({ name: 'records' })\n}\n\nonMounted(async () => {\n  await fetchRecords()\n  weightList.value = generateWeightList()\n  if (!shouldShowChart.value) {\n    fadeInHint()\n    emit('not-enough-data')\n    return\n  }\n\n  const barChart = initChart(barChartRef)\n  setChartOption(barChart, weightList.value)\n})\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref_key: \"barChartRef\",\n      ref: barChartRef,\n      class: \"bar-chart\"\n    }, null, 512),\n    _createElementVNode(\"div\", {\n      ref_key: \"hintWrapperRef\",\n      ref: hintWrapperRef,\n      class: \"hint-wrapper\"\n    }, [\n      _createElementVNode(\"span\", { class: \"hint\" }, _toDisplayString(hint)),\n      _createVNode(LabeledIconButton, {\n        \"svg-src\": _unref(ArrowRightSvg),\n        label: linkText,\n        onClick: handleLinkButtonClick,\n        onKeydown: handleLinkButtonClick\n      }, null, 8, [\"svg-src\"])\n    ], 512)\n  ]))\n}\n}\n\n})","import script from \"./LastDaysWeightBarChart.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LastDaysWeightBarChart.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LastDaysWeightBarChart.vue?vue&type=style&index=0&id=5c3c2aea&lang=scss&scoped=true\"\n\nimport exportComponent from \"G:\\\\TestProjects\\\\weight-manager\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5c3c2aea\"]])\n\nexport default __exports__","\nimport { defineComponent, defineAsyncComponent } from 'vue'\nimport LastDaysWeightBarChart from '@/components/LastDaysWeightBarChart.vue'\n\nconst WeighingItem = defineAsyncComponent({\n  loader: () => import('@/components/WeighingItem.vue'),\n\n})\n\nexport default defineComponent({\n  name: 'DashboardView',\n  components: {\n    WeighingItem,\n    LastDaysWeightBarChart,\n  },\n  data() {\n    return {\n      barChart: {\n        inited: false,\n        notEnoughData: false,\n      },\n    }\n  },\n  computed: {\n    showWeighingItem(): boolean {\n      const showWeighingItem = this.barChart.inited || this.barChart.notEnoughData\n      return showWeighingItem\n    },\n  },\n  methods: {\n    handleBarChartInited() {\n      this.barChart.inited = true\n    },\n    handleBarChartNotEnoughData() {\n      this.barChart.notEnoughData = true\n    },\n  },\n})\n","import { render } from \"./DashboardView.vue?vue&type=template&id=36ca72a7&scoped=true&ts=true\"\nimport script from \"./DashboardView.vue?vue&type=script&lang=ts\"\nexport * from \"./DashboardView.vue?vue&type=script&lang=ts\"\n\nimport \"./DashboardView.vue?vue&type=style&index=0&id=36ca72a7&lang=scss&scoped=true\"\n\nimport exportComponent from \"G:\\\\TestProjects\\\\weight-manager\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-36ca72a7\"]])\n\nexport default __exports__"],"names":["db","getMonthlyRecord","dateTime","Promise","isAuthenticatedResult","error","Error","year","toString","month","docRef","docSnap","exists","data","updateDailyRecord","dailyRecord","day","merge","result","_hoisted_1","class","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_WeighingItem","_component_LastDaysWeightBarChart","_","key","onInited","handleBarChartInited","onNotEnoughData","handleBarChartNotEnoughData","__name","props","label","svgSrc","setup","__props","src","__exports__","emits","emit","shouldFetchLastMonthRecord","hint","linkText","weightList","hintWrapperRef","barChartRef","monthlyRecord","currentMonthRecord","lastMonthRecord","afterFetchRecord","shouldShowChart","value","length","fetchCurrentMonthRecord","currentMonth","toast","message","fetchLastMonthRecord","lastMonth","minus","fetchRecords","getWeight","isCurrentMonth","hasSame","weight","generateWeightList","generatedWeightList","i","newDay","generatedWeightItem","date","toISODate","push","getMinAndMaxWeight","weightListParam","min","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","forEach","weightItem","Math","getBarColor","weightParam","minWeightParam","maxWeightParam","transformToChartData","chartData","seriesData","xAxisData","itemStyle","color","registerResizeListener","chart","window","addEventListener","resize","initChart","barChartRefParam","barChart","setChartOption","minWeight","maxWeight","setOption","title","show","text","left","textStyle","tooltip","xAxis","type","axisLine","axisTick","yAxis","scale","series","borderRadius","grid","right","animationEasing","fadeInHint","timeline","gsap","fromTo","autoAlpha","ease","duration","handleLinkButtonClick","router","name","ref_key","ref","LabeledIconButton","onClick","onKeydown","WeighingItem","loader","components","LastDaysWeightBarChart","inited","notEnoughData","computed","showWeighingItem","this","methods"],"sourceRoot":""}